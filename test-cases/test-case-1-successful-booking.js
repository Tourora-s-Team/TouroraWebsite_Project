const http = require('http');

/**
 * TEST CASE 1: ƒê·∫∑t Xe Th√†nh C√¥ng (Happy Path)
 * M·ª•c ti√™u: Ki·ªÉm tra ch·ª©c nƒÉng ƒë·∫∑t xe ho·∫°t ƒë·ªông ch√≠nh x√°c trong ƒëi·ªÅu ki·ªán b√¨nh th∆∞·ªùng
 */

// M√†u s·∫Øc cho console
const colors = {
    reset: '\x1b[0m',
    green: '\x1b[32m',
    red: '\x1b[31m',
    yellow: '\x1b[33m',
    blue: '\x1b[34m',
    cyan: '\x1b[36m'
};

async function testCase1_SuccessfulBooking() {
    console.log(`${colors.blue}=== TEST CASE 1: ƒê·∫∂T XE TH√ÄNH C√îNG ===${colors.reset}`);
    console.log('M·ª•c ti√™u: Ki·ªÉm tra ƒë·∫∑t xe trong ƒëi·ªÅu ki·ªán b√¨nh th∆∞·ªùng\n');
    
    try {
        // D·ªØ li·ªáu booking h·ª£p l·ªá
        const bookingData = {
            car: {
                _id: "675b2f4c35f5d4bed041fa7c", // ObjectId th·ª±c t·∫ø t·ª´ database
                car_id: 1,
                car_name: "Toyota Vios",
                car_type: "Sedan", 
                price_per_day: 800000
            },
            supplier: {
                id: "675ac1d2cc4de4474ee9543d", // ObjectId th·ª±c t·∫ø t·ª´ database
                name: "ABC Car Rental",
                location: "H·ªì Ch√≠ Minh"
            },
            customerInfo: {
                fullname: "Nguy·ªÖn VƒÉn Test",
                email: "test@example.com",
                numberPhone: "0123456789"
            },
            rental: {
                startDate: "2025-07-01",
                startTime: "09:00",
                endDate: "2025-07-03",
                endTime: "18:00",
                mode: "self",
                location: "H·ªì Ch√≠ Minh"
            },
            pickupLocation: {
                address: "123 Test Street",
                coordinates: { lat: 10.762622, lng: 106.660172 },
                type: "office"
            },
            dropoffLocation: {
                address: "456 Test Avenue",
                coordinates: { lat: 10.762622, lng: 106.660172 },
                type: "office"
            },
            extras: [],
            pricing: {
                basePrice: 1600000,
                extraCharges: 0,
                taxes: 0,
                total: 1600000,
                days: 2,
                currency: "VND"
            }
        };

        console.log(`${colors.cyan}üì§ G·ª≠i request ƒë·∫∑t xe...${colors.reset}`);
        console.log('D·ªØ li·ªáu booking:', JSON.stringify(bookingData, null, 2));

        const response = await makeRequest('/api/car-rental-service/book', 'POST', bookingData);
        
        console.log(`\n${colors.cyan}üì• Nh·∫≠n response:${colors.reset}`);
        console.log(JSON.stringify(response, null, 2));

        // Validation k·∫øt qu·∫£
        const testResults = {
            hasSuccess: response.hasOwnProperty('success'),
            isSuccessTrue: response.success === true,
            hasBookingId: response.hasOwnProperty('bookingId'),
            bookingIdValid: response.bookingId && response.bookingId.length > 0
        };

        console.log(`\n${colors.yellow}üîç K·∫øt qu·∫£ ki·ªÉm tra:${colors.reset}`);
        console.log('- C√≥ tr∆∞·ªùng success:', testResults.hasSuccess ? '‚úÖ' : '‚ùå');
        console.log('- Success = true:', testResults.isSuccessTrue ? '‚úÖ' : '‚ùå');
        console.log('- C√≥ bookingId:', testResults.hasBookingId ? '‚úÖ' : '‚ùå');
        console.log('- BookingId h·ª£p l·ªá:', testResults.bookingIdValid ? '‚úÖ' : '‚ùå');

        // K·∫øt lu·∫≠n test
        const passed = testResults.hasSuccess && testResults.isSuccessTrue && 
                      testResults.hasBookingId && testResults.bookingIdValid;

        if (passed) {
            console.log(`\n${colors.green}‚úÖ TEST CASE 1: PASS${colors.reset}`);
            console.log(`BookingId ƒë∆∞·ª£c t·∫°o: ${response.bookingId}`);
            return {
                testCase: 'Test Case 1 - Successful Booking',
                status: 'PASS',
                bookingId: response.bookingId,
                details: 'ƒê·∫∑t xe th√†nh c√¥ng v·ªõi d·ªØ li·ªáu h·ª£p l·ªá'
            };
        } else {
            console.log(`\n${colors.red}‚ùå TEST CASE 1: FAIL${colors.reset}`);
            console.log('L√Ω do:', !testResults.isSuccessTrue ? 'Booking kh√¥ng th√†nh c√¥ng' : 'Thi·∫øu bookingId');
            return {
                testCase: 'Test Case 1 - Successful Booking',
                status: 'FAIL',
                details: 'Booking kh√¥ng th√†nh c√¥ng ho·∫∑c thi·∫øu bookingId',
                response
            };
        }

    } catch (error) {
        console.log(`\n${colors.red}‚ùå TEST CASE 1: ERROR${colors.reset}`);
        console.error('L·ªói:', error.message);
        return {
            testCase: 'Test Case 1 - Successful Booking',
            status: 'ERROR',
            error: error.message
        };
    }
}

// Helper function ƒë·ªÉ g·ª≠i HTTP request
async function makeRequest(path, method = 'GET', data = null) {
    return new Promise((resolve, reject) => {
        const options = {
            hostname: 'localhost',
            port: 3001,
            path,
            method,
            headers: {
                'Content-Type': 'application/json'
            }
        };

        if (data) {
            const jsonData = JSON.stringify(data);
            options.headers['Content-Length'] = Buffer.byteLength(jsonData);
        }

        const req = http.request(options, (res) => {
            let responseData = '';
            res.on('data', (chunk) => responseData += chunk);
            res.on('end', () => {
                try {
                    resolve(JSON.parse(responseData));
                } catch (e) {
                    resolve(responseData);
                }
            });
        });

        req.on('error', reject);
        
        if (data) {
            req.write(JSON.stringify(data));
        }
        req.end();
    });
}

// Ch·∫°y test n·∫øu file ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
    testCase1_SuccessfulBooking()
        .then(result => {
            console.log('\n' + '='.repeat(50));
            console.log('K·∫æT QU·∫¢ CU·ªêI C√ôNG:', result.status);
            console.log('='.repeat(50));
        })
        .catch(console.error);
}

module.exports = testCase1_SuccessfulBooking;
